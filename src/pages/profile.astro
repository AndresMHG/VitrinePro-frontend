---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
---

<Layout>
  <Header />
  <main class="profile-main">
    <!-- Hero Section with Impact -->
    <section class="hero-section">
      <div class="hero-background">
        <div class="hero-gradient"></div>
        <div class="hero-pattern"></div>
      </div>
      <div class="hero-content">
        <div class="hero-text">
          <h1 class="hero-name animate-fade-in">John Doe</h1>
          <p class="hero-profession animate-slide-up">Software Engineer</p>
          <p class="hero-tagline animate-slide-up-delay">Transformando ideas en soluciones digitales excepcionales</p>
        </div>
        <div class="hero-stats animate-scale-in">
          <div class="stat-item">
            <span class="stat-number" data-target="8">0</span>
            <span class="stat-label">A√±os de Experiencia</span>
          </div>
          <div class="stat-item">
            <span class="stat-number" data-target="50">0</span>
            <span class="stat-label">Proyectos Completados</span>
          </div>
          <div class="stat-item">
            <span class="stat-number" data-target="100">0</span>
            <span class="stat-label">Clientes Satisfechos</span>
          </div>
        </div>
        <div class="hero-actions animate-slide-up-delay-2">
          <button class="cta-primary">Descargar CV</button>
          <button class="cta-secondary">Contactar</button>
        </div>
      </div>
    </section>

    <!-- Skills Section -->
    <section class="skills-section">
      <div class="section-container">
        <h2 class="section-title animate-on-scroll">Habilidades T√©cnicas</h2>
        <div class="skills-grid">
          <div class="skill-category">
            <h3>Frontend</h3>
            <div class="skill-item">
              <span class="skill-name">React</span>
              <div class="skill-bar">
                <div class="skill-progress" data-width="95"></div>
              </div>
              <span class="skill-percentage">95%</span>
            </div>
            <div class="skill-item">
              <span class="skill-name">Vue.js</span>
              <div class="skill-bar">
                <div class="skill-progress" data-width="90"></div>
              </div>
              <span class="skill-percentage">90%</span>
            </div>
            <div class="skill-item">
              <span class="skill-name">TypeScript</span>
              <div class="skill-bar">
                <div class="skill-progress" data-width="88"></div>
              </div>
              <span class="skill-percentage">88%</span>
            </div>
          </div>

          <div class="skill-category">
            <h3>Backend</h3>
            <div class="skill-item">
              <span class="skill-name">Node.js</span>
              <div class="skill-bar">
                <div class="skill-progress" data-width="92"></div>
              </div>
              <span class="skill-percentage">92%</span>
            </div>
            <div class="skill-item">
              <span class="skill-name">Python</span>
              <div class="skill-bar">
                <div class="skill-progress" data-width="85"></div>
              </div>
              <span class="skill-percentage">85%</span>
            </div>
            <div class="skill-item">
              <span class="skill-name">PostgreSQL</span>
              <div class="skill-bar">
                <div class="skill-progress" data-width="90"></div>
              </div>
              <span class="skill-percentage">90%</span>
            </div>
          </div>

          <div class="skill-category">
            <h3>DevOps & Cloud</h3>
            <div class="skill-item">
              <span class="skill-name">AWS</span>
              <div class="skill-bar">
                <div class="skill-progress" data-width="87"></div>
              </div>
              <span class="skill-percentage">87%</span>
            </div>
            <div class="skill-item">
              <span class="skill-name">Docker</span>
              <div class="skill-bar">
                <div class="skill-progress" data-width="90"></div>
              </div>
              <span class="skill-percentage">90%</span>
            </div>
            <div class="skill-item">
              <span class="skill-name">Kubernetes</span>
              <div class="skill-bar">
                <div class="skill-progress" data-width="80"></div>
              </div>
              <span class="skill-percentage">80%</span>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Experience Timeline -->
    <section class="experience-section">
      <div class="section-container">
        <h2 class="section-title animate-on-scroll">Trayectoria Profesional</h2>
        <div class="timeline">
          <div class="timeline-item animate-on-scroll">
            <div class="timeline-marker"></div>
            <div class="timeline-content">
              <div class="timeline-header">
                <h3>TechCorp Inc.</h3>
                <span class="timeline-date">2020 - Presente</span>
              </div>
              <p class="timeline-role">Senior Software Engineer</p>
              <div class="timeline-description">
                <p>Lider√© equipos de desarrollo, refactoric√© plataformas legacy mejorando el rendimiento en un 40%, e implement√© arquitecturas de microservicios escalables.</p>
                <div class="timeline-achievements">
                  <span class="achievement-tag">üèÜ Team Leadership</span>
                  <span class="achievement-tag">‚ö° Performance Optimization</span>
                  <span class="achievement-tag">üîí Security Implementation</span>
                </div>
              </div>
            </div>
          </div>

          <div class="timeline-item animate-on-scroll">
            <div class="timeline-marker"></div>
            <div class="timeline-content">
              <div class="timeline-header">
                <h3>InnoTech Solutions</h3>
                <span class="timeline-date">2017 - 2020</span>
              </div>
              <p class="timeline-role">Software Developer</p>
              <div class="timeline-description">
                <p>Desarroll√© soluciones innovadoras incluyendo integraci√≥n IoT, sistemas CRM modernos y suites de testing automatizado.</p>
                <div class="timeline-achievements">
                  <span class="achievement-tag">üöÄ Innovation</span>
                  <span class="achievement-tag">üîß System Architecture</span>
                  <span class="achievement-tag">üìä Data Integration</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Projects Showcase -->
    <section class="projects-section">
      <div class="section-container">
        <h2 class="section-title animate-on-scroll">Proyectos Destacados</h2>
        <div class="projects-grid">
          <div class="project-card animate-on-scroll" data-category="web">
            <div class="project-image">
              <div class="project-overlay">
                <div class="project-links">
                  <button class="project-link" data-project="ecommerce">Ver Proyecto</button>
                  <button class="project-link secondary" data-project="ecommerce">C√≥digo</button>
                </div>
              </div>
            </div>
            <div class="project-content">
              <h3>E-commerce Platform Refactor</h3>
              <p>Refactorizaci√≥n completa mejorando rendimiento en 40%</p>
              <div class="project-tech">
                <span class="tech-pill">React</span>
                <span class="tech-pill">Node.js</span>
                <span class="tech-pill">AWS</span>
              </div>
            </div>
          </div>

          <div class="project-card animate-on-scroll" data-category="mobile">
            <div class="project-image">
              <div class="project-overlay">
                <div class="project-links">
                  <button class="project-link" data-project="mobile">Ver Proyecto</button>
                  <button class="project-link secondary" data-project="mobile">C√≥digo</button>
                </div>
              </div>
            </div>
            <div class="project-content">
              <h3>Mobile App Development</h3>
              <p>Lanzada 2 meses antes del plazo con feedback excepcional</p>
              <div class="project-tech">
                <span class="tech-pill">React Native</span>
                <span class="tech-pill">Express.js</span>
                <span class="tech-pill">PostgreSQL</span>
              </div>
            </div>
          </div>

          <div class="project-card animate-on-scroll" data-category="security">
            <div class="project-image">
              <div class="project-overlay">
                <div class="project-links">
                  <button class="project-link" data-project="security">Ver Proyecto</button>
                  <button class="project-link secondary" data-project="security">C√≥digo</button>
                </div>
              </div>
            </div>
            <div class="project-content">
              <h3>Security Audit & Improvements</h3>
              <p>Reducci√≥n de vulnerabilidades en un 60%</p>
              <div class="project-tech">
                <span class="tech-pill">OWASP</span>
                <span class="tech-pill">JWT</span>
                <span class="tech-pill">SSL/TLS</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- About & Contact -->
    <section class="about-section">
      <div class="section-container">
        <div class="about-grid">
          <div class="about-content animate-on-scroll">
            <h2>Sobre Mi</h2>
            <p class="about-text">
              Soy un apasionado desarrollador de software con m√°s de 8 a√±os de experiencia creando soluciones digitales
              que marcan la diferencia. Mi enfoque se centra en la innovaci√≥n, la excelencia t√©cnica y el impacto positivo
              en los usuarios finales.
            </p>
            <p class="about-text">
              Creo firmemente que la tecnolog√≠a debe ser accesible, escalable y sostenible. Cada proyecto es una
              oportunidad para aprender, crecer y contribuir al avance de la industria tecnol√≥gica.
            </p>
            <div class="about-values">
              <div class="value-item">
                <span class="value-icon">üéØ</span>
                <span class="value-text">Enfoque en Resultados</span>
              </div>
              <div class="value-item">
                <span class="value-icon">üöÄ</span>
                <span class="value-text">Innovaci√≥n Constante</span>
              </div>
              <div class="value-item">
                <span class="value-icon">ü§ù</span>
                <span class="value-text">Trabajo en Equipo</span>
              </div>
            </div>
          </div>

          <div class="contact-content animate-on-scroll">
            <h2>Conectemos</h2>
            <div class="contact-form">
              <div class="form-group">
                <input type="text" placeholder="Tu Nombre" class="form-input">
              </div>
              <div class="form-group">
                <input type="email" placeholder="Tu Email" class="form-input">
              </div>
              <div class="form-group">
                <textarea placeholder="Tu Mensaje" class="form-textarea"></textarea>
              </div>
              <button class="form-submit">Enviar Mensaje</button>
            </div>

            <div class="contact-info">
              <div class="contact-item">
                <span class="contact-icon">üìß</span>
                <span>john.doe@example.com</span>
              </div>
              <div class="contact-item">
                <span class="contact-icon">üì±</span>
                <span>+1 234 567 890</span>
              </div>
              <div class="contact-item">
                <span class="contact-icon">üìç</span>
                <span>San Francisco, CA</span>
              </div>
            </div>

            <div class="social-links">
              <a href="#" class="social-link linkedin">LinkedIn</a>
              <a href="#" class="social-link github">GitHub</a>
              <a href="#" class="social-link twitter">Twitter</a>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>
  <Footer />
</Layout>

<style>
  /* Global Styles */
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    line-height: 1.6;
    color: #1a202c;
    overflow-x: hidden;
  }

  .profile-main {
    min-height: 100vh;
    background: var(--gradient-bg);
    position: relative;
  }

  .profile-main::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background:
      radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),
      radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.3) 0%, transparent 50%);
    pointer-events: none;
    z-index: 0;
  }

  .section-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    position: relative;
    z-index: 1;
  }

  /* Hero Section */
  .hero-section {
    position: relative;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    overflow: hidden;
  }

  .hero-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
  }

  .hero-gradient {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--gradient-bg);
    opacity: 0.9;
    backdrop-filter: blur(10px);
  }

  .hero-pattern {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.1;
    background-image:
      radial-gradient(circle at 25% 25%, #fff 2px, transparent 2px),
      radial-gradient(circle at 75% 75%, #fff 2px, transparent 2px);
    background-size: 50px 50px;
  }

  .hero-content {
    position: relative;
    z-index: 2;
    max-width: 800px;
    padding: 40px;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    border-radius: 24px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
  }

  .hero-name {
    font-size: clamp(3rem, 8vw, 5rem);
    font-weight: 800;
    color: #fff;
    margin-bottom: 1rem;
    text-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 1s ease-out 0.2s forwards;
  }

  .hero-profession {
    font-size: clamp(1.2rem, 3vw, 1.8rem);
    font-weight: 300;
    color: rgba(255, 255, 255, 0.9);
    margin-bottom: 1.5rem;
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 1s ease-out 0.4s forwards;
  }

  .hero-tagline {
    font-size: clamp(1rem, 2.5vw, 1.3rem);
    color: rgba(255, 255, 255, 0.8);
    margin-bottom: 3rem;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 1s ease-out 0.6s forwards;
  }

  .hero-stats {
    display: flex;
    justify-content: center;
    gap: 3rem;
    margin-bottom: 3rem;
    opacity: 0;
    transform: scale(0.8);
    animation: scaleIn 1s ease-out 0.8s forwards;
  }

  .stat-item {
    text-align: center;
  }

  .stat-number {
    display: block;
    font-size: 3rem;
    font-weight: 800;
    color: #fff;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    margin-bottom: 0.5rem;
  }

  .stat-label {
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.8);
    font-weight: 300;
  }

  .hero-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 1s ease-out 1s forwards;
  }

  .cta-primary,
  .cta-secondary {
    padding: 1rem 2rem;
    border-radius: 50px;
    font-weight: 600;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .cta-primary {
    background: linear-gradient(135deg, #ff6b6b, #ee5a24);
    color: #fff;
    box-shadow: 0 8px 25px rgba(255, 107, 107, 0.4);
  }

  .cta-primary:hover {
    transform: translateY(-3px);
    box-shadow: 0 12px 35px rgba(255, 107, 107, 0.6);
  }

  .cta-secondary {
    background: rgba(255, 255, 255, 0.2);
    color: #fff;
    border: 2px solid rgba(255, 255, 255, 0.3);
    backdrop-filter: blur(10px);
  }

  .cta-secondary:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateY(-3px);
  }

  /* Skills Section */
  .skills-section {
    padding: 100px 0;
    background: #fff;
    position: relative;
  }

  .section-title {
    font-size: clamp(2rem, 5vw, 3rem);
    font-weight: 700;
    color: #1a202c;
    text-align: center;
    margin-bottom: 4rem;
    position: relative;
  }

  .section-title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 4px;
    background: var(--gradient-bg);
    border-radius: 2px;
  }

  .skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 3rem;
  }

  .skill-category {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(20px);
    border-radius: 20px;
    padding: 2rem;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .skill-category:hover {
    transform: translateY(-5px);
  }

  .skill-category h3 {
    color: #1a202c;
    margin-bottom: 2rem;
    font-size: 1.5rem;
    font-weight: 600;
  }

  .skill-item {
    margin-bottom: 1.5rem;
  }

  .skill-name {
    display: block;
    font-weight: 600;
    color: #374151;
    margin-bottom: 0.5rem;
  }

  .skill-bar {
    width: 100%;
    height: 8px;
    background: #e5e7eb;
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: 0.5rem;
  }

  .skill-progress {
    height: 100%;
    background: var(--gradient-bg);
    border-radius: 4px;
    width: 0;
    transition: width 2s ease-out;
  }

  .skill-percentage {
    font-size: 0.8rem;
    color: #6b7280;
    font-weight: 500;
  }

  /* Experience Timeline */
  .experience-section {
    padding: 100px 0;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  }

  .timeline {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
  }

  .timeline::before {
    content: '';
    position: absolute;
    left: 30px;
    top: 0;
    bottom: 0;
    width: 2px;
    background: var(--gradient-bg);
  }

  .timeline-item {
    margin-bottom: 3rem;
    position: relative;
    opacity: 0;
    transform: translateX(-50px);
    transition: all 0.6s ease;
  }

  .timeline-item.animate-on-scroll {
    opacity: 1;
    transform: translateX(0);
  }

  .timeline-marker {
    position: absolute;
    left: 22px;
    top: 20px;
    width: 16px;
    height: 16px;
    background: var(--gradient-bg);
    border-radius: 50%;
    border: 4px solid #fff;
    box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.2);
  }

  .timeline-content {
    margin-left: 80px;
    background: #fff;
    padding: 2rem;
    border-radius: 16px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.8);
  }

  .timeline-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;
  }

  .timeline-header h3 {
    color: #1a202c;
    font-size: 1.5rem;
    font-weight: 600;
    margin: 0;
  }

  .timeline-date {
    color: var(--primary-color);
    font-weight: 600;
    font-size: 0.9rem;
    background: rgba(102, 126, 234, 0.1);
    padding: 0.5rem 1rem;
    border-radius: 20px;
  }

  .timeline-role {
    color: #6b7280;
    font-style: italic;
    margin-bottom: 1rem;
  }

  .timeline-description p {
    color: #4b5563;
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .timeline-achievements {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .achievement-tag {
    background: var(--gradient-bg);
    color: #fff;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 500;
  }

  /* Projects Section */
  .projects-section {
    padding: 100px 0;
    background: #fff;
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
  }

  .project-card {
    background: #fff;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    opacity: 0;
    transform: translateY(50px);
  }

  .project-card.animate-on-scroll {
    opacity: 1;
    transform: translateY(0);
  }

  .project-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 30px 60px rgba(0, 0, 0, 0.2);
  }

  .project-image {
    height: 200px;
    background: var(--gradient-bg);
    position: relative;
    overflow: hidden;
  }

  .project-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .project-card:hover .project-overlay {
    opacity: 1;
  }

  .project-links {
    display: flex;
    gap: 1rem;
  }

  .project-link {
    padding: 0.8rem 1.5rem;
    border-radius: 25px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
    text-transform: uppercase;
    font-size: 0.8rem;
    letter-spacing: 1px;
  }

  .project-link:first-child {
    background: var(--gradient-bg);
    color: #fff;
    box-shadow: 0 8px 25px rgba(255, 107, 107, 0.4);
  }

  .project-link.secondary {
    background: rgba(255, 255, 255, 0.2);
    color: #fff;
    border: 2px solid rgba(255, 255, 255, 0.3);
  }

  .project-link:hover {
    transform: translateY(-2px);
  }

  .project-content {
    padding: 2rem;
  }

  .project-content h3 {
    color: #1a202c;
    font-size: 1.3rem;
    font-weight: 600;
    margin-bottom: 1rem;
  }

  .project-content p {
    color: #6b7280;
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .project-tech {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tech-pill {
    background: rgba(102, 126, 234, 0.1);
    color: var(--primary-color);
    padding: 0.4rem 0.8rem;
    border-radius: 15px;
    font-size: 0.8rem;
    font-weight: 500;
  }

  /* About Section */
  .about-section {
    padding: 100px 0;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  }

  .about-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: start;
  }

  .about-content h2,
  .contact-content h2 {
    font-size: 2.5rem;
    font-weight: 700;
    color: #1a202c;
    margin-bottom: 2rem;
  }

  .about-text {
    color: #4b5563;
    line-height: 1.8;
    margin-bottom: 2rem;
    font-size: 1.1rem;
  }

  .about-values {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1.5rem;
    margin-top: 2rem;
  }

  .value-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
    border-radius: 16px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: transform 0.3s ease;
  }

  .value-item:hover {
    transform: translateY(-5px);
  }

  .value-icon {
    font-size: 2rem;
  }

  .value-text {
    font-weight: 600;
    color: #1a202c;
  }

  /* Contact Form */
  .contact-form {
    margin-bottom: 3rem;
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-input,
  .form-textarea {
    width: 100%;
    padding: 1rem 1.5rem;
    border: 2px solid #e5e7eb;
    border-radius: 12px;
    font-size: 1rem;
    transition: all 0.3s ease;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
  }

  .form-input:focus,
  .form-textarea:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  }

  .form-textarea {
    resize: vertical;
    min-height: 120px;
  }

  .form-submit {
    width: 100%;
    padding: 1rem 2rem;
    background: var(--gradient-bg);
    color: #fff;
    border: none;
    border-radius: 12px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .form-submit:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
  }

  .contact-info {
    margin-bottom: 2rem;
  }

  .contact-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .contact-icon {
    font-size: 1.5rem;
  }

  .social-links {
    display: flex;
    gap: 1rem;
  }

  .social-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    text-decoration: none;
    font-size: 1.5rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .social-link.linkedin {
    background: linear-gradient(135deg, #0077b5, #005885);
    color: #fff;
  }

  .social-link.github {
    background: linear-gradient(135deg, #333, #24292e);
    color: #fff;
  }

  .social-link.twitter {
    background: linear-gradient(135deg, #1da1f2, #0d95e8);
    color: #fff;
  }

  .social-link:hover {
    transform: translateY(-3px) scale(1.1);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  }

  /* Animations */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.8);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .animate-fade-in {
    animation: fadeInUp 1s ease-out forwards;
  }

  .animate-slide-up {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 1s ease-out 0.4s forwards;
  }

  .animate-slide-up-delay {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 1s ease-out 0.6s forwards;
  }

  .animate-slide-up-delay-2 {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 1s ease-out 0.8s forwards;
  }

  .animate-scale-in {
    opacity: 0;
    transform: scale(0.8);
    animation: scaleIn 1s ease-out 0.8s forwards;
  }

  .animate-on-scroll {
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.6s ease;
  }

  .animate-on-scroll.animate-visible {
    opacity: 1;
    transform: translateY(0);
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .about-grid {
      grid-template-columns: 1fr;
      gap: 3rem;
    }

    .hero-stats {
      flex-direction: column;
      gap: 2rem;
    }

    .stat-number {
      font-size: 2.5rem;
    }
  }

  @media (max-width: 768px) {
    .hero-content {
      padding: 30px 20px;
      margin: 20px;
    }

    .hero-name {
      font-size: 2.5rem;
    }

    .hero-stats {
      gap: 2rem;
    }

    .hero-actions {
      flex-direction: column;
      align-items: center;
    }

    .cta-primary,
    .cta-secondary {
      width: 100%;
      max-width: 300px;
    }

    .skills-grid {
      grid-template-columns: 1fr;
    }

    .projects-grid {
      grid-template-columns: 1fr;
    }

    .timeline-content {
      margin-left: 60px;
    }

    .timeline::before {
      left: 20px;
    }

    .timeline-marker {
      left: 12px;
    }

    .about-grid {
      gap: 2rem;
    }
  }

  @media (max-width: 480px) {
    .section-container {
      padding: 0 15px;
    }

    .hero-content {
      padding: 25px 15px;
      margin: 10px;
    }

    .hero-name {
      font-size: 2rem;
    }

    .hero-tagline {
      font-size: 1rem;
    }

    .hero-stats {
      gap: 1.5rem;
    }

    .stat-number {
      font-size: 2rem;
    }

    .skill-category {
      padding: 1.5rem;
    }

    .timeline-content {
      padding: 1.5rem;
      margin-left: 50px;
    }

    .project-content {
      padding: 1.5rem;
    }

    .about-content h2,
    .contact-content h2 {
      font-size: 2rem;
    }
  }
</style>

<script>
  // Color Themes System
  const colorThemes = [
    {
      name: 'Blue Ocean',
      primary: '#667eea',
      secondary: '#764ba2',
      accent: '#ff6b6b',
      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
    },
    {
      name: 'Sunset Orange',
      primary: '#ff6b6b',
      secondary: '#ee5a24',
      accent: '#667eea',
      background: 'linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%)'
    },
    {
      name: 'Forest Green',
      primary: '#4ade80',
      secondary: '#22c55e',
      accent: '#f59e0b',
      background: 'linear-gradient(135deg, #4ade80 0%, #22c55e 100%)'
    },
    {
      name: 'Purple Dream',
      primary: '#a855f7',
      secondary: '#7c3aed',
      accent: '#06b6d4',
      background: 'linear-gradient(135deg, #a855f7 0%, #7c3aed 100%)'
    },
    {
      name: 'Rose Pink',
      primary: '#f472b6',
      secondary: '#ec4899',
      accent: '#8b5cf6',
      background: 'linear-gradient(135deg, #f472b6 0%, #ec4899 100%)'
    },
    {
      name: 'Teal Blue',
      primary: '#06b6d4',
      secondary: '#0891b2',
      accent: '#f59e0b',
      background: 'linear-gradient(135deg, #06b6d4 0%, #0891b2 100%)'
    }
  ];

  // Random theme selection
  const currentTheme = colorThemes[Math.floor(Math.random() * colorThemes.length)];

  // Apply theme to CSS variables
  document.documentElement.style.setProperty('--primary-color', currentTheme.primary);
  document.documentElement.style.setProperty('--secondary-color', currentTheme.secondary);
  document.documentElement.style.setProperty('--accent-color', currentTheme.accent);
  document.documentElement.style.setProperty('--gradient-bg', currentTheme.background);

  // Update theme name display
  const themeDisplay = document.createElement('div');
  themeDisplay.textContent = `Tema: ${currentTheme.name}`;
  themeDisplay.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: rgba(255, 255, 255, 0.9);
    padding: 10px 15px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
    color: #333;
    z-index: 1000;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  `;
  document.body.appendChild(themeDisplay);

  document.addEventListener('DOMContentLoaded', function() {
    // Animated Counters
    function animateCounters() {
      const counters = document.querySelectorAll('.stat-number');

      counters.forEach((counter: Element) => {
        const targetAttr = counter.getAttribute('data-target');
        if (!targetAttr) return;

        const target = parseInt(targetAttr);
        const duration = 2000; // 2 seconds
        const step = target / (duration / 16); // 60fps
        let current = 0;

        const timer = setInterval(() => {
          current += step;
          if (current >= target) {
            (counter as HTMLElement).textContent = target.toString();
            clearInterval(timer);
          } else {
            (counter as HTMLElement).textContent = Math.floor(current).toString();
          }
        }, 16);
      });
    }

    // Trigger counter animation when hero section is visible
    const heroObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          animateCounters();
          heroObserver.unobserve(entry.target);
        }
      });
    }, { threshold: 0.5 });

    const heroSection = document.querySelector('.hero-section');
    if (heroSection) {
      heroObserver.observe(heroSection);
    }

    // Skill Progress Bars Animation
    function animateSkillBars() {
      const skillBars = document.querySelectorAll('.skill-progress');

      skillBars.forEach((bar: Element, index: number) => {
        const width = bar.getAttribute('data-width');
        if (!width) return;

        setTimeout(() => {
          (bar as HTMLElement).style.width = width + '%';
        }, index * 200); // Stagger animation
      });
    }

    // Trigger skill bars animation on scroll
    const skillsObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          animateSkillBars();
          skillsObserver.unobserve(entry.target);
        }
      });
    }, { threshold: 0.3 });

    const skillsSection = document.querySelector('.skills-section');
    if (skillsSection) {
      skillsObserver.observe(skillsSection);
    }

    // Scroll Animations
    function handleScrollAnimations() {
      const elements = document.querySelectorAll('.animate-on-scroll');

      elements.forEach((element: Element) => {
        const elementTop = element.getBoundingClientRect().top;
        const elementBottom = element.getBoundingClientRect().bottom;
        const windowHeight = window.innerHeight;

        if (elementTop < windowHeight * 0.8 && elementBottom > 0) {
          element.classList.add('animate-visible');
        }
      });
    }

    // Throttle scroll events
    let scrollTimeout: number | null = null;
    window.addEventListener('scroll', () => {
      if (!scrollTimeout) {
        scrollTimeout = window.setTimeout(() => {
          handleScrollAnimations();
          scrollTimeout = null;
        }, 16); // ~60fps
      }
    });

    // Initial check for elements already in viewport
    handleScrollAnimations();

    // Smooth Scrolling for Navigation
    document.querySelectorAll('a[href^="#"]').forEach((anchor: Element) => {
      anchor.addEventListener('click', function(this: HTMLElement, e: Event) {
        e.preventDefault();
        const href = this.getAttribute('href');
        if (!href) return;

        const target = document.querySelector(href);
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });

    // Project Links Interaction
    document.querySelectorAll('.project-link').forEach((link: Element) => {
      link.addEventListener('click', function(this: HTMLElement, e: Event) {
        e.stopPropagation();
        const projectType = this.getAttribute('data-project');

        // Add click animation
        this.style.transform = 'scale(0.95)';
        setTimeout(() => {
          this.style.transform = 'scale(1)';
        }, 150);

        // Here you could add modal opening logic
        console.log('Project clicked:', projectType);
      });
    });

    // Form Submission
    const contactForm = document.querySelector('.contact-form');
    if (contactForm) {
      contactForm.addEventListener('submit', function(this: HTMLFormElement, e: Event) {
        e.preventDefault();

        const submitBtn = this.querySelector('.form-submit') as HTMLButtonElement;
        if (!submitBtn) return;

        const originalText = submitBtn.textContent || '';

        // Show loading state
        submitBtn.textContent = 'Enviando...';
        submitBtn.disabled = true;

        // Simulate form submission
        setTimeout(() => {
          submitBtn.textContent = '¬°Mensaje Enviado!';
          submitBtn.style.background = 'linear-gradient(135deg, #4ade80, #22c55e)';

          setTimeout(() => {
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
            submitBtn.style.background = 'linear-gradient(135deg, #667eea, #764ba2)';
            this.reset();
          }, 3000);
        }, 2000);
      });
    }

    // Mouse movement parallax effect for hero background
    document.addEventListener('mousemove', (e: MouseEvent) => {
      const hero = document.querySelector('.hero-section');
      if (hero) {
        const mouseX = e.clientX / window.innerWidth;
        const mouseY = e.clientY / window.innerHeight;

        const pattern = hero.querySelector('.hero-pattern');
        if (pattern) {
          (pattern as HTMLElement).style.transform = `translate(${mouseX * 20}px, ${mouseY * 20}px)`;
        }
      }
    });

    // Add loading animation to page
    window.addEventListener('load', () => {
      document.body.classList.add('loaded');
    });

    // Intersection Observer for performance
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-visible');
        }
      });
    }, observerOptions);

    // Observe all animate-on-scroll elements
    document.querySelectorAll('.animate-on-scroll').forEach((el: Element) => {
      observer.observe(el);
    });

    // Add hover effects to value items
    document.querySelectorAll('.value-item').forEach((item: Element) => {
      item.addEventListener('mouseenter', function(this: HTMLElement) {
        this.style.transform = 'translateY(-8px) rotate(2deg)';
      });

      item.addEventListener('mouseleave', function(this: HTMLElement) {
        this.style.transform = 'translateY(0) rotate(0deg)';
      });
    });

    // Add ripple effect to buttons
    function createRipple(event: MouseEvent) {
      const button = event.currentTarget as HTMLElement;
      const circle = document.createElement('span');
      const diameter = Math.max(button.clientWidth, button.clientHeight);
      const radius = diameter / 2;

      const rect = button.getBoundingClientRect();
      circle.style.width = circle.style.height = diameter + 'px';
      circle.style.left = event.clientX - rect.left - radius + 'px';
      circle.style.top = event.clientY - rect.top - radius + 'px';
      circle.classList.add('ripple');

      const ripple = button.getElementsByClassName('ripple')[0];
      if (ripple) {
        ripple.remove();
      }

      button.appendChild(circle);
    }

    document.querySelectorAll('.cta-primary, .cta-secondary, .form-submit').forEach((button: Element) => {
      button.addEventListener('click', createRipple as EventListener);
    });

    // Add CSS for ripple effect
    const style = document.createElement('style');
    style.textContent = `
      .ripple {
        position: absolute;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.6);
        transform: scale(0);
        animation: ripple 0.6s linear;
        pointer-events: none;
      }

      @keyframes ripple {
        to {
          transform: scale(4);
          opacity: 0;
        }
      }
    `;
    document.head.appendChild(style);
  });
</script>